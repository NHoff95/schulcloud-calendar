swagger: '2.0'
info:
  title: Calendar API
  description: >-
    API specification of the Schul-Cloud Calendar Service based on the JSON API specification 1.0 (http://jsonapi.org). Contribute today on https://github.com/schulcloud/schulcloud-calendar.
    _Important_: Routes with a `X` as last character in the summary (next to the route) are not yet implemented, those with an asterisk `*` are not yet finished.
  version: 0.0.7
  contact:
    email: schulcloud-dev@lists.myhpi.de
host: 'schul-cloud.org:3000'
schemes:
  - https
basePath: /
consumes:
  - application/json
produces:
  - application/json
  - text/calendar
tags:
  - name: calendar
    description: Get an ICS feed
  - name: events
    description: Work with one or multiple events as JSON
  - name: events/ics
    description: Work with one or multiple events as ICS string
  - name: share
    description: Access an ICS feed from an external endpoint
  - name: subscriptions
    description: Manage subscribed ICS feeds
  - name: to-dos
    description: Work with one or multiple To Dos as JSON
  - name: to-dos/ics
    description: Work with one or multiple To Dos as ICS string
paths:
  '/calendar/list':
    get:
      summary: Get an array with all ICS feeds for the given token.
      responses:
        '200':
          description: All ICS feeds
          schema:
            $ref: '#/definitions/CalendarList'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - calendar
      security:
        - user-token: []

  '/calendar':
    parameters:
      - name: scope-id
        in: query
        required: true
        type: string
    get:
      summary: Get an ICS feed (* no JSON API returned).
      responses:
        '200':
          description: ICS calendar feed
          schema:
            type: file
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - calendar
      security:
        - user-token: []

  /events:
    get:
      summary: Get a list of events.
      parameters:
      - name: scope-id
        in: query
        required: false
        type: string
      - name: event-id
        in: query
        required: false
        type: string
      - name: from
        in: query
        required: false
        type: string
        format: date-time
      - name: until
        in: query
        required: false
        type: string
        format: date-time
      - name: all
        in: query
        required: false
        type: boolean
      responses:
        '200':
          description: GetEventResponse
          schema:
            $ref: '#/definitions/GetEventResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - events
      security:
        - user-token: []
    post:
      summary: Create new events for a list of UUIDs.
      responses:
        '201':
          description: CreateEventResponse
          schema:
            $ref: '#/definitions/GetCreateSingleEventResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateModifyEventRequest'
      tags:
        - events
      security:
        - user-token: []
  '/events/{event-id}':
    parameters:
      - name: event-id
        in: path
        required: true
        type: string
    put:
      summary: >-
        Modify an Event for a list of UUIDs, which has been created by the same
        service earlier (* doesn't check for ID).
      description: The calendar service will delete the old event completely (including all alarms, exdates, ...). Therefore, you MUST ensure to re-submit the event with all details. The data array may contain more than one event but only if the uid is equal for all events (occours if a single event is changed in a series of events).
      responses:
        '200':
          description: Successful
          schema:
            $ref: '#/definitions/GetCreateSingleEventResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateModifyEventRequest'
      tags:
        - events
      security:
        - user-token: []
    delete:
      summary: Delete an Event for a list of UUIDs (* all events are deleted, regardless the UUID).
      responses:
        '204':
          description: Successful
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteEventRequest'
      tags:
        - events
      security:
        - user-token: []
  /events/ics:
    post:
      summary: Create a new Event for a list of UUIDs where the ics is given (* does not check for ID).
      responses:
        '201':
          description: CreateEventResponse
          schema:
            $ref: '#/definitions/GetCreateSingleIcsEventResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateModifyIcsEventRequest'
      tags:
        - events/ics
      security:
        - user-token: []
  '/events/ics/{event-id}':
    parameters:
      - name: event-id
        in: path
        required: true
        type: string
    put:
      summary: >-
        Modify an Event for a list of UUIDs, which has been created by the same
        service earlier. Thereby the ics is transcribed (* does not check for ID).
      description: The calendar service will delete the old event completely (including all alarms, exdates, ...). Therefore, you MUST ensure to re-submit the event with all details.The data array may contain more than one event but only if the uid is equal for all events (occours if a single event is changed in a series of events).
      responses:
        '200':
          description: Successful
          schema:
            $ref: '#/definitions/GetCreateSingleIcsEventResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateModifyIcsEventRequest'
      tags:
        - events/ics
      security:
        - user-token: []

  '/share/list':
    get:
      summary: Get a list of current share tokens for the given authentication token (X).
      responses:
        '200':
          description: ShareTokenList
          schema:
            $ref: '#/definitions/ShareTokenList'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - share
      security:
        - user-token: []

  '/share/calendar/{share-token}':
    parameters:
      - name: share-token
        in: path
        required: true
        type: string
    get:
      summary: Get an ICS feed for the specified share token (X).
      responses:
        '200':
          description: ICS calendar feed
          schema:
            type: file
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - share


  '/share/{scope-id}/':
    parameters:
      - name: scope-id
        in: path
        required: true
        type: string
    post:
      summary: Create a new share token for the specified scope id (X).
      responses:
        '201':
          description: ShareTokenList
          schema:
            $ref: '#/definitions/GetCreateSingleShareTokenResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - share
      security:
        - user-token: []

  '/share/{share-token}':
    parameters:
      - name: share-token
        in: path
        required: true
        type: string
    get:
      summary: Get details for a given share token (X).
      responses:
        '200':
          description: ShareToken
          schema:
            $ref: '#/definitions/GetCreateSingleShareTokenResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - share
      security:
        - user-token: []
    delete:
      summary: Revoke the specified share token (X).
      responses:
        '204':
          description: Successful
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - share
      security:
        - user-token: []

  '/subscriptions':
    get:
      summary: Get a list of subscribed feeds for the scopes you have write access to.
      parameters:
      - name: scope-id
        in: query
        required: false
        type: string
      - name: subscription-id
        in: query
        required: false
        type: string
      - name: last-update-failed
        in: query
        required: false
        type: boolean
      responses:
        '200':
          description: FeedUrlList
          schema:
            $ref: '#/definitions/GetExternalFeedResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - subscriptions
      security:
        - user-token: []
    post:
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateModifyExternalFeedRequest'
      summary: Add a new feed to be synced with one of your calendars (* feed is saved but appointments not loaded).
      responses:
        '201':
          description: FeedUrlList
          schema:
            $ref: '#/definitions/GetCreateSingleExternalFeedResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - subscriptions
      security:
        - user-token: []

  '/subscriptions/{subscription-id}':
    parameters:
      - name: subscription-id
        in: path
        required: true
        type: string
    put:
      summary: Update synchronisation settings for a subscribed feed.
      description: The calendar service will delete the old external feed subscription completely. Therefore, you MUST ensure to re-submit the subscription with all details.
      responses:
        '200':
          description: FeedUrlList
          schema:
            $ref: '#/definitions/GetCreateSingleExternalFeedResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateModifyExternalFeedRequest'
      tags:
        - subscriptions
      security:
        - user-token: []
    delete:
      summary: Unsubscribe the external feed and stop syncing.
      responses:
        '204':
          description: Successful
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - subscriptions
      security:
        - user-token: []

  '/to-dos':
    get:
      summary: Get a list of To Dos (X).
      parameters:
      - name: scope-id
        in: query
        required: false
        type: string
      - name: to-do-id
        in: query
        required: false
        type: string
      - name: from
        in: query
        required: false
        type: string
        format: date-time
      - name: until
        in: query
        required: false
        type: string
        format: date-time
      - name: all
        in: query
        required: false
        type: boolean
      responses:
        '200':
          description: GetToDoResponse
          schema:
            $ref: '#/definitions/GetToDoResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      tags:
        - to-dos
      security:
        - user-token: []
    post:
      summary: Create a new To Do for a list of UUIDs (X).
      responses:
        '201':
          description: CreateToDoResponse
          schema:
            $ref: '#/definitions/GetCreateSingleToDoResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateModifyToDoRequest'
      tags:
        - to-dos
      security:
        - user-token: []
  '/to-dos/{to-do-id}':
    parameters:
      - name: to-do-id
        in: path
        required: true
        type: string
    put:
      summary: >-
        Modify a To Do for a list of UUIDs, which has been created by the same
        service earlier (X).
      description: The calendar service will delete the old To Do completely (including all exdates, ...). Therefore, you MUST ensure to re-submit the To Do with all details. The data array may contain more than one To Do but only if the uid is equal for all To Dos (occours if a single To Do is changed in a series of To Dos).
      responses:
        '200':
          description: Successful
          schema:
            $ref: '#/definitions/GetCreateSingleToDoResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateModifyToDoRequest'
      tags:
        - to-dos
      security:
        - user-token: []
    delete:
      summary: Delete a To Do for a list of UUIDs (X).
      responses:
        '204':
          description: Successful
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/DeleteToDoRequest'
      tags:
        - to-dos
      security:
        - user-token: []
  '/to-dos/ics':
    post:
      summary: Create a new To Do for a list of UUIDs where the ics is given (X).
      responses:
        '201':
          description: CreateToDoResponse
          schema:
            $ref: '#/definitions/GetCreateSingleIcsToDoResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateModifyIcsToDoRequest'
      tags:
        - to-dos/ics
      security:
        - user-token: []
  '/to-dos/ics/{to-do-id}':
    parameters:
      - name: to-do-id
        in: path
        required: true
        type: string
    put:
      summary: >-
        Modify a To Do for a list of UUIDs, which has been created by the same
        service earlier. Thereby the ics is transcribed. (X).
      description: The calendar service will delete the old To Do completely (including all exdates, ...). Therefore, you MUST ensure to re-submit the To Do with all details. The data array may contain more than one To Do but only if the uid is equal for all To Dos (occours if a single To Do is changed in a series of To Dos).
      responses:
        '200':
          description: Successful
          schema:
            $ref: '#/definitions/GetCreateSingleIcsToDoResponse'
        default:
          description: Unexpected error
          schema:
            $ref: '#/definitions/Error'
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateModifyIcsToDoRequest'
      tags:
        - to-dos/ics
      security:
        - user-token: []

definitions:
  CalendarList:
    type: object
    properties:
      links:
        type: object
        properties:
          self:
            type: string
            example: "https://schul-cloud.org:3000/calendar/list"
      data:
        type: array
        items:
          type: object
          properties:
            type:
              type: string
              enum:
                - ics-feed-per-scope
                - ics-feed
              example: "ics-feed-per-scope"
            id:
              type: string
              example: "5d5b48a5-96f7-466d-850f-24069b869b64"
            attributes:
              type: object
              properties:
                name:
                  type: string
                  example: "Maxi Mustermann"
                ics-url:
                  type: string
                  description: an ICS Feed with all scopes merged or for one scope
                  example: "https://schul-cloud.org:3000/calendar/5d5b48a5-96f7-466d-850f-24069b869b64"


  CreateModifyEventRequest:
    type: object
    properties:
      data:
        type: array
        items:
          type: object
          properties:
            type:
              type: string
              example: "event"
            attributes:
              $ref: '#/definitions/EventJSONattributes'
            relationships:
              $ref: '#/definitions/RelationshipScopeIds'
            included:
              type: array
              items:
                type: object
                allOf:
                  - type: object
                    properties:
                      type:
                        type: string
                        example: "rrule"
                      attributes:
                        $ref: '#/definitions/RRuleJSONattributes'
                  - type: object
                    properties:
                      type:
                        type: string
                        example: "exdate"
                      attributes:
                        $ref: '#/definitions/ExDatesJSONattributes'
                  - type: object
                    properties:
                      type:
                        type: string
                        example: "alarm"
                      attributes:
                        $ref: '#/definitions/AlarmsJSONattributes'


  CreateModifyIcsEventRequest:
    type: object
    properties:
      data:
        type: array
        items:
          type: object
          properties:
            type:
              type: string
              example: "event"
            attributes:
              type: object
              properties:
                ics:
                  type: string
                  example: 'BEGIN:VCALENDAR\n...\nEND:VCALENDAR'
            relationships:
              $ref: '#/definitions/RelationshipScopeIds'

  DeleteEventRequest:
    type: object
    properties:
      data:
        type: array
        items:
          type: object
          properties:
            type:
              type: string
              example: "event"
            relationships:
              type: object
              properties:
                scope-ids:
                  description: ids of entities. Might be empty to delete the event completely.
                  type: array
                  items:
                    type: string
                    example: '3b611d43-cf33-4a08-a50d-eac63975ea00'

  GetEventResponse:
    type: object
    properties:
      links:
        type: object
        properties:
          self:
            type: string
            example: "https://schul-cloud.org:3000/event"
          next:
            type: string
            example: ""
          prev:
            type: string
            example: ""
          first:
            type: string
            example: ""
          last:
            type: string
            example: ""
      data:
        $ref: '#/definitions/GetEventResponseData'

  GetCreateSingleEventResponse:
    type: object
    properties:
      links:
        type: object
        properties:
          self:
            type: string
            example: "https://schul-cloud.org:3000/event/?event-id=71c2f833-e26b-4635-b954-2f72f136cfd9"
      data:
        $ref: '#/definitions/GetEventResponseData'

  GetCreateSingleIcsEventResponse:
    type: object
    properties:
      links:
        type: object
        properties:
          self:
            type: string
            example: "https://schul-cloud.org:3000/event/?event-id=71c2f833-e26b-4635-b954-2f72f136cfd9"
      data:
        type: array
        items:
          type: object
          properties:
            type:
              type: string
              example: "event"
            id:
              type: string
              example: '71c2f833-e26b-4635-b954-2f72f136cfd9'
            attributes:
              type: object
              properties:
                ics:
                  type: string
                  example: 'BEGIN:VCALENDAR\n...\nEND:VCALENDAR'
            relationships:
              $ref: '#/definitions/RelationshipScopeIds'

  GetEventResponseData:
    type: array
    items:
      type: object
      properties:
        type:
          type: string
          example: "event"
        id:
          type: string
          example: '71c2f833-e26b-4635-b954-2f72f136cfd9'
        attributes:
          $ref: '#/definitions/EventJSONattributes'
        relationships:
          $ref: '#/definitions/RelationshipScopeIds'
        included:
          type: array
          items:
            type: object
            allOf:
              - type: object
                properties:
                  type:
                    type: string
                    example: "rrule"
                  id:
                    type: string
                    example: "db7c2a08-0963-460d-a0e6-948bac85b145"
                  attributes:
                    $ref: '#/definitions/RRuleJSONattributes'
              - type: object
                properties:
                  type:
                    type: string
                    example: "exdate"
                  id:
                    type: string
                    example: "37dc1705-be2a-4410-b435-d8d95ce7a5f8"
                  attributes:
                    $ref: '#/definitions/ExDatesJSONattributes'
              - type: object
                properties:
                  type:
                    type: string
                    example: "alarm"
                  id:
                    type: string
                    example: "24897696-ee2a-4dcc-ba14-6d8dc1107fb5"
                  attributes:
                    $ref: '#/definitions/AlarmsJSONattributes'

  ShareTokenList:
    type: object
    properties:
      links:
        type: object
        properties:
          self:
            type: string
            example: "https://schul-cloud.org:3000/share/list"
      data:
        type: array
        items:
          $ref: '#/definitions/ShareToken'


  GetCreateSingleShareTokenResponse:
    type: object
    properties:
      links:
        type: object
        properties:
          self:
            type: string
            example: "https://schul-cloud.org:3000/share/629a8ebd-1b2e-48dd-b331-f9b6a62b7aec"
      data:
        type: array
        items:
          $ref: '#/definitions/ShareToken'

  EventJSONattributes:
    type: object
    properties:
      uid:
        type: string
        example: "71c2f833-e26b-4635-b954-2f72f136cfd9@schul-cloud.org"
      summary:
        type: string
        example: Legend Summer Party
      location:
        type: string
        example: 'HPI, Potsdam'
      description:
        type: string
        example: 'For students, alumni and special guests only'
      dtstart:
        type: string
        format: date-time
        example: '2017-07-28T15:00:00Z'
      dtend:
        type: string
        format: date-time
        example: '2017-07-28T23:00:00Z'
      dtstamp:
        type: string
        format: date-time
        example: '2017-01-08T13:36:00Z'
      last-modified:
        type: string
        format: date-time
        example: '2017-01-08T13:36:00Z'
      transp:
        type: string
        example: OPAQUE
      sequence:
        type: integer
        format: int32
        example: 0
      recurrence-id:
        type: string
        example: 20170108T133600Z
      x-sc-...:
        description: custom Schul-Cloud specific fields, MUST have a 'x-sc-' prefix
        type: string

  RRuleJSONattributes:
    type: object
    properties:
      freq:
        type: string
        enum:
          - SECONDLY
          - MINUTELY
          - HOURLY
          - DAILY
          - WEEKLY
          - MONTHLY
          - YEARLY
        example: WEEKLY
      until:
        type: string
        format: date-time
        example: '2017-07-28T23:00:00Z'
      count:
        type: integer
        format: int32
        example: 2
      interval:
        type: integer
        format: int32
        example: 1
      bysecond:
        type: array
        items:
          type: integer
          format: int32
          minimum: 0
          maximum: 59
      byminute:
        type: array
        items:
          type: integer
          format: int32
          minimum: 0
          maximum: 59
      byhour:
        type: array
        items:
          type: integer
          format: int32
          minimum: 0
          maximum: 23
      byday:
        type: array
        items:
          type: string
          enum:
            - MO
            - TU
            - WE
            - TH
            - FR
            - SA
            - SU
          example: SU
      bymonthday:
        type: array
        items:
          type: integer
          format: int32
          minimum: 1
          maximum: 31
      byyearday:
        type: array
        items:
          type: integer
          format: int32
          minimum: 1
          maximum: 366
      byweekno:
        type: array
        items:
          type: integer
          format: int32
          minimum: 1
          maximum: 53
      bymonth:
        type: array
        items:
          type: integer
          format: int32
          minimum: 1
          maximum: 12
      bysetpos:
        type: array
        items:
          type: integer
          format: int32
          minimum: 1
          maximum: 366
      wkst:
        type: string
        enum:
          - MO
          - TU
          - WE
          - TH
          - FR
          - SA
          - SU
        example: MO

  ExDatesJSONattributes:
    type: object
    properties:
      timestamp:
        type: string
        format: date-time
        example: '2017-01-05T20:44:58Z'

  AlarmsJSONattributes:
    type: object
    properties:
      trigger:
        type: string
        example: '-PT5M'
      repeat:
        type: integer
        format: int32
        example: 2
      duration:
        type: string
        example: PT15M
      action:
        type: string
        enum:
          - DISPLAY
          - AUDIO
          - EMAIL
        example: DISPLAY
      attach:
        type: string
        example: ';FMTTYPE=audio/basic:ftp://example.com/pub/sounds/bell-01.aud'
      description:
        type: string
        example: Prepare for summer party // Email body
      attendee:
        type: string
        example: 'mailto:user@example.org'
      summary:
        type: string
        example: Email subject

  ShareToken:
    type: object
    properties:
      type:
        type: string
        example: "share-token"
      id:
        type: string
        example: "6e1acea2-8a78-4cc4-a10a-591b008ef231"
      attributes:
        type: object
        properties:
          token:
            type: string
            example: "{share-token}"
          scope-id:
            type: string
            example: "5d5b48a5-96f7-466d-850f-24069b869b64"

  CreateModifyToDoRequest:
    type: object
    properties:
      data:
        type: array
        items:
          type: object
          properties:
            type:
              type: string
              example: "to-do"
            attributes:
              $ref: '#/definitions/ToDoJSONattributes'
            relationships:
              $ref: '#/definitions/RelationshipScopeIds'
            included:
              type: array
              items:
                type: object
                allOf:
                  - type: object
                    properties:
                      type:
                        type: string
                        example: "rrule"
                      attributes:
                        $ref: '#/definitions/RRuleJSONattributes'
                  - type: object
                    properties:
                      type:
                        type: string
                        example: "exdate"
                      attributes:
                        $ref: '#/definitions/ExDatesJSONattributes'


  CreateModifyIcsToDoRequest:
    type: object
    properties:
      data:
        type: array
        items:
          type: object
          properties:
            type:
              type: string
              example: "to-do"
            attributes:
              type: object
              properties:
                ics:
                  type: string
                  example: 'BEGIN:VTODO\n...\nEND:VTODO'
            relationships:
              $ref: '#/definitions/RelationshipScopeIds'

  DeleteToDoRequest:
    type: object
    properties:
      data:
        type: array
        items:
          type: object
          properties:
            type:
              type: string
              example: "to-do"
            relationships:
              type: object
              properties:
                scope-ids:
                  description: ids of entities. Might be empty to delete the To Do completely.
                  type: array
                  items:
                    type: string
                    example: '3b611d43-cf33-4a08-a50d-eac63975ea00'

  GetToDoResponse:
    type: object
    properties:
      links:
        type: object
        properties:
          self:
            type: string
            example: "https://schul-cloud.org:3000/to-dos"
          next:
            type: string
            example: ""
          prev:
            type: string
            example: ""
          first:
            type: string
            example: ""
          last:
            type: string
            example: ""
      data:
        $ref: '#/definitions/GetToDoResponseData'

  GetCreateSingleToDoResponse:
    type: object
    properties:
      links:
        type: object
        properties:
          self:
            type: string
            example: "https://schul-cloud.org:3000/to-dos/?to-do-id=71c2f833-e26b-4635-b954-2f72f136cfd9"
      data:
        $ref: '#/definitions/GetToDoResponseData'

  GetCreateSingleIcsToDoResponse:
    type: object
    properties:
      links:
        type: object
        properties:
          self:
            type: string
            example: "https://schul-cloud.org:3000/to-dos/?to-do-id=71c2f833-e26b-4635-b954-2f72f136cfd9"
      data:
        type: array
        items:
          type: object
          properties:
            type:
              type: string
              example: "to-do"
            id:
              type: string
              example: '71c2f833-e26b-4635-b954-2f72f136cfd9'
            attributes:
              type: object
              properties:
                ics:
                  type: string
                  example: 'BEGIN:VTODO\n...\nEND:VTODO'
            relationships:
              $ref: '#/definitions/RelationshipScopeIds'

  GetToDoResponseData:
    type: array
    items:
      type: object
      properties:
        type:
          type: string
          example: "to-do"
        id:
          type: string
          example: '71c2f833-e26b-4635-b954-2f72f136cfd9'
        attributes:
          $ref: '#/definitions/ToDoJSONattributes'
        relationships:
          $ref: '#/definitions/RelationshipScopeIds'
        included:
          type: array
          items:
            type: object
            allOf:
              - type: object
                properties:
                  type:
                    type: string
                    example: "rrule"
                  id:
                    type: string
                    example: "db7c2a08-0963-460d-a0e6-948bac85b145"
                  attributes:
                    $ref: '#/definitions/RRuleJSONattributes'
              - type: object
                properties:
                  type:
                    type: string
                    example: "exdate"
                  id:
                    type: string
                    example: "37dc1705-be2a-4410-b435-d8d95ce7a5f8"
                  attributes:
                    $ref: '#/definitions/ExDatesJSONattributes'

  ToDoJSONattributes:
    type: object
    properties:
      uid:
        type: string
        example: "01395c2b-d975-4a55-a6b7-6074cd5ecd22@schul-cloud.org"
      summary:
        type: string
        example: Finish Homework
      location:
        type: string
        example: 'School'
      description:
        type: string
        example: "Don't forget to hand in submission"
      dtstart:
        type: string
        format: date-time
        example: '2017-02-01T09:00:00Z'
      dtstamp:
        type: string
        format: date-time
        example: '2017-01-22T21:36:00Z'
      last-modified:
        type: string
        format: date-time
        example: '2017-01-22T21:36:00Z'
      priority:
        type: number
        format: int32
        example: 1
      class:
        type: string
        example: 'confidential'
      completed:
        type: string
        example: 20170201T081700Z
      x-sc-...:
        description: custom Schul-Cloud specific fields, MUST have a 'x-sc-' prefix
        type: string

  GetExternalFeedResponse:
    type: object
    properties:
      links:
        type: object
        properties:
          self:
            type: string
            example: "https://schul-cloud.org:3000/subscriptions"
      data:
        type: array
        items:
          $ref: '#/definitions/ExternalFeedData'

  CreateModifyExternalFeedRequest:
    type: object
    properties:
      data:
        type: array
        items:
          type: object
          properties:
            type:
              type: string
              example: "subscriptions"
            attributes:
              $ref: '#/definitions/ExternalFeedAttributesRequest'
            relationships:
              $ref: '#/definitions/RelationshipScopeIds'

  GetCreateSingleExternalFeedResponse:
    type: object
    properties:
      links:
        type: object
        properties:
          self:
            type: string
            example: "https://schul-cloud.org:3000/subscriptions/8ad5a293-8ed8-45d9-8a20-2e353051af1c"
      data:
        type: array
        items:
          $ref: '#/definitions/ExternalFeedData'

  ExternalFeedData:
    type: object
    properties:
      type:
        type: string
        example: "subscriptions"
      id:
        type: string
        example: "8ad5a293-8ed8-45d9-8a20-2e353051af1c"
      attributes:
        $ref: '#/definitions/ExternalFeedAttributesResponse'
      relationships:
        $ref: '#/definitions/RelationshipScopeIds'

  ExternalFeedAttributesRequest:
    type: object
    properties:
      ics-url:
        type: string
        example: "https://calendars.icloud.com/holidays/de_de.ics"
      description:
        type: string
        example: "Public Holidays in Germany"

  ExternalFeedAttributesResponse:
    type: object
    properties:
      ics-url:
        type: string
        example: "https://calendars.icloud.com/holidays/de_de.ics"
      description:
        type: string
        example: "Public Holidays in Germany"
      last-updated:
        type: string
        format: date-time
        example: '2017-01-23T10:00:00Z'
      last-update-status:
        type: integer
        format: int32
        example: '200'
        description: HTTP Status Code of last update attempt

  RelationshipScopeIds:
    type: object
    properties:
      separate-users:
        type: boolean
        example: true
      scope-ids:
        description: ids of entities
        type: array
        items:
          type: string
          example: 'c985809e-a232-4fb0-a069-1cc59375304c'

  Error:
    type: object
    properties:
      errors:
        type: array
        items:
          type: object
          properties:
            status:
              type: integer
              format: int32
            source:
              type: object
            title:
              type: string
            detail:
              type: string

securityDefinitions:
  user-token:
    type: apiKey
    name: Authorization
    in: header
    description: >-
      Pass the user's token to authenticate for any method where the token is
      not part of the URL.
